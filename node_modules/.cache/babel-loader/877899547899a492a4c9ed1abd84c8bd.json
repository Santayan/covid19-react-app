{"ast":null,"code":"var _jsxFileName = \"/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/src/LineGraph.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\n\nfunction LineGraph({\n  casesType = 'cases'\n}) {\n  const [data, setData] = useState({}); // https://disease.sh/v3/covid-19/historical/all?lastdays=120\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(response => response.json()).then(data => {\n        console.log(data);\n        const chartData = buildChartData(data);\n        setData(chartData);\n      });\n    };\n\n    fetchData();\n  }, [casesType]);\n\n  const buildChartData = (data, casesType = 'cases') => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"I am a Graph\"), (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/React.createElement(Line, {\n    options: options,\n    data: {\n      datasets: [{\n        backgroundColor: \"rgba(204,16,52,0.5)\",\n        borderColor: '#CC1034',\n        data: data\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default LineGraph;","map":{"version":3,"sources":["/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/src/LineGraph.js"],"names":["React","useState","useEffect","Line","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","casesType","setData","fetchData","fetch","then","response","json","console","log","chartData","buildChartData","lastDataPoint","date","cases","newDataPoint","x","y","push","length","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState , useEffect} from 'react';\nimport { Line } from \"react-chartjs-2\";\n\nconst options = {\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return numeral(tooltipItem.value).format(\"+0,0\");\n        },\n      },\n    },\n  \n    scales: {\n      xAxes: [\n        {\n          type: \"time\",\n          time: {\n            format: \"MM/DD/YY\",\n            tooltipFormat: \"ll\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n          ticks: {\n            callback: function (value, index, values) {\n              return numeral(value).format(\"0a\");\n            },\n          },\n        },\n      ],\n    },\n  };\n\nfunction LineGraph({casesType='cases'}) {\nconst[data, setData] = useState({});\n// https://disease.sh/v3/covid-19/historical/all?lastdays=120\n\nuseEffect(() => {\n    const fetchData = async () => {\n        await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n        .then(response => response.json())\n        .then(data => {\n                console.log(data)\n                const chartData = buildChartData(data);\n                setData(chartData)\n        })\n    }\n    fetchData();\n}, [casesType])\n\nconst buildChartData = (data, casesType='cases') => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for(let date in data.cases) {\n        if(lastDataPoint) {\n            const newDataPoint = {\n                x: date,\n                y: data[casesType][date] - lastDataPoint\n            }\n            chartData.push(newDataPoint);\n        }\n        lastDataPoint = data[casesType][date];\n    }\n    return chartData;\n}\n\n    return (\n        <div>\n            <h1>I am a Graph</h1>\n            {data?.length > 0 && (\n            <Line \n            options={options}\n            data={{\n                datasets: [{\n                    backgroundColor: \"rgba(204,16,52,0.5)\",\n                    borderColor: '#CC1034',\n                    data: data\n                }]\n\n            }} />\n\n            )}\n\n        </div>\n    )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}