{"ast":null,"code":"import _regeneratorRuntime from\"/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{MenuItem,FormControl,Select,Card,CardContent,Table}from\"@material-ui/core\";import InfoBox from'./InfoBox';import Map from'./Map';import TableA from'./TableA';import'./App.css';import{sortData}from'./util';function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],setCountries=_useState2[1];var _useState3=useState('worldwide'),_useState4=_slicedToArray(_useState3,2),dropdownCountry=_useState4[0],setdropdownCountry=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),countryInfo=_useState6[0],setCountryInfo=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),tableData=_useState8[0],setTableData=_useState8[1];useEffect(function(){fetch(\"https://disease.sh/v3/covid-19/all\").then(function(response){return response.json();}).then(function(data){setCountryInfo(data);});},[]);// STATE = thats how we write variables in react\n// USEEFFECT = Runs a piece of code based on a given condition\n// https://disease.sh/v3/covid-19/countries\nuseEffect(function(){var getCountriesData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://disease.sh/v3/covid-19/countries\").then(function(response){return response.json();}).then(function(data){var countries=data.map(function(country){return{name:country.country,value:country.countryInfo.iso2};});var sortedData=sortData(data);setTableData(sortedData);setCountries(countries);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getCountriesData(){return _ref.apply(this,arguments);};}();getCountriesData();},[]);var onCountryChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var countryCode,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:countryCode=event.target.value;setdropdownCountry(countryCode);url=countryCode==='worldwide'?'https://disease.sh/v3/covid-19/all':\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);_context2.next=5;return fetch(url).then(function(response){return response.json();}).then(function(data){setdropdownCountry(countryCode);setCountryInfo(data);});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function onCountryChange(_x){return _ref2.apply(this,arguments);};}();console.log(countryInfo);return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app_left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app_header\"},/*#__PURE__*/React.createElement(\"h1\",null,\"COVID-19 TRACKER\"),/*#__PURE__*/React.createElement(FormControl,{className:\"app_dropdown\"},/*#__PURE__*/React.createElement(Select,{variant:\"outlined\",onChange:onCountryChange,value:dropdownCountry},/*#__PURE__*/React.createElement(MenuItem,{value:\"worldwide\"},\"Worldwide\"),countries.map(function(country){return/*#__PURE__*/React.createElement(MenuItem,{value:country.value},country.name);})))),/*#__PURE__*/React.createElement(\"div\",{className:\"app_stats\"},/*#__PURE__*/React.createElement(InfoBox,{title:\"Coronavirus Cases\",cases:countryInfo.todayCases,total:countryInfo.cases}),/*#__PURE__*/React.createElement(InfoBox,{title:\"Recovered\",cases:countryInfo.todayRecovered,total:countryInfo.recovered}),/*#__PURE__*/React.createElement(InfoBox,{title:\"Death\",cases:countryInfo.todayDeaths,total:countryInfo.deaths})),/*#__PURE__*/React.createElement(Map,null)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Card,{className:\"app_right\"},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(\"h3\",null,\"Live Cases By Country\"),/*#__PURE__*/React.createElement(TableA,{countries:tableData}),/*#__PURE__*/React.createElement(\"h3\",null,\"Worldwide New Cases\")))));}export default App;","map":{"version":3,"sources":["/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","Table","InfoBox","Map","TableA","sortData","App","countries","setCountries","dropdownCountry","setdropdownCountry","countryInfo","setCountryInfo","tableData","setTableData","fetch","then","response","json","data","getCountriesData","map","country","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","console","log","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React , {useState , useEffect}  from 'react';\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n  Table\n} from \"@material-ui/core\" \nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport TableA from './TableA';\nimport './App.css';\nimport { sortData } from './util';\n\nfunction App() {\n  const [countries,setCountries] = useState([]);\n  const [dropdownCountry,setdropdownCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then(response => response.json())\n    .then(data => {\n      setCountryInfo(data);\n    })\n  }, [])\n\n  // STATE = thats how we write variables in react\n  // USEEFFECT = Runs a piece of code based on a given condition\n  // https://disease.sh/v3/covid-19/countries\n\n  useEffect(() => {\n\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data) => {\n        const countries = data.map((country) => (\n          {\n            name: country.country,\n            value: country.countryInfo.iso2\n          }\n        ));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(countries);\n      })\n    }\n      getCountriesData();\n  }, [])\n\n  const onCountryChange = async (event) => {\n      const countryCode = event.target.value;\n      setdropdownCountry(countryCode);\n\n      const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : \n      `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n      await fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        setdropdownCountry(countryCode);\n        setCountryInfo(data);\n      })\n  }\n  console.log(countryInfo)\n\n  return (\n    <div className=\"app\"> \n\n      <div className=\"app_left\">\n              {/* Header */}\n              {/* Title + Select Input Dropdown */}\n              <div className=\"app_header\">\n    <h1>COVID-19 TRACKER</h1>\n    <FormControl className=\"app_dropdown\">\n      <Select variant=\"outlined\" onChange={onCountryChange} value={dropdownCountry}>\n      <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n        {\n          countries.map((country)=> (\n            <MenuItem value={country.value}>{country.name}</MenuItem>\n          ))\n        }\n\n          {/* <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n          <MenuItem value=\"worldwide\">India</MenuItem>\n          <MenuItem value=\"worldwide\">USA</MenuItem>\n          <MenuItem value=\"worldwide\">Australia</MenuItem> */}\n        </Select>\n    </FormControl>\n    </div>\n     \n                {/* InfoBoxs */}\n                 {/* InfoBoxs */}\n                {/* InfoBoxs */}\n                 {/* InfoBoxs */}\n    <div className=\"app_stats\">\n          <InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases}></InfoBox>\n\n          <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered}></InfoBox>\n\n          <InfoBox title=\"Death\" cases={countryInfo.todayDeaths} total={countryInfo.deaths}></InfoBox>\n    </div>\n    {/* Map */}\n    <Map></Map>\n      </div>\n          <div>\n            <Card className=\"app_right\">\n              <CardContent>\n                <h3>Live Cases By Country</h3>\n                <TableA countries = { tableData } />\n                <h3>Worldwide New Cases</h3>\n                {/* Graph */}   \n\n              </CardContent>\n            </Card>\n\n          </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}