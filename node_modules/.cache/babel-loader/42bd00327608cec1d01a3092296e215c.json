{"ast":null,"code":"var _jsxFileName = \"/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/src/LineGraph.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\nconst options = {\n  legend: {\n    display\n  }\n};\n\nfunction LineGraph() {\n  const [data, setData] = useState({}); // https://disease.sh/v3/covid-19/historical/all?lastdays=120\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(response => response.json()).then(data => {\n      console.log(data);\n      const chartData = buildChartData(data);\n      setData(chartData);\n    });\n  }, []);\n\n  const buildChartData = (data, casesType = 'cases') => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"I am a Graph\"), /*#__PURE__*/React.createElement(Line, {\n    options: options,\n    data: {\n      datasets: [{\n        data: data\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default LineGraph;","map":{"version":3,"sources":["/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/src/LineGraph.js"],"names":["React","useState","useEffect","Line","options","legend","display","LineGraph","data","setData","fetch","then","response","json","console","log","chartData","buildChartData","casesType","lastDataPoint","date","cases","newDataPoint","x","y","push","datasets"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAoBC,SAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,MAAMC,OAAO,GAAE;AACVC,EAAAA,MAAM,EAAE;AACJC,IAAAA;AADI;AADE,CAAf;;AAMA,SAASC,SAAT,GAAqB;AACrB,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAA/B,CADqB,CAErB;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMH,IAAI,IAAI;AACNM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,YAAMQ,SAAS,GAAGC,cAAc,CAACT,IAAD,CAAhC;AACAC,MAAAA,OAAO,CAACO,SAAD,CAAP;AAEP,KAPD;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,QAAMC,cAAc,GAAG,CAACT,IAAD,EAAOU,SAAS,GAAC,OAAjB,KAA6B;AAChD,UAAMF,SAAS,GAAG,EAAlB;AACA,QAAIG,aAAJ;;AAEA,SAAI,IAAIC,IAAR,IAAgBZ,IAAI,CAACa,KAArB,EAA4B;AACxB,UAAGF,aAAH,EAAkB;AACd,cAAMG,YAAY,GAAG;AACjBC,UAAAA,CAAC,EAAEH,IADc;AAEjBI,UAAAA,CAAC,EAAEhB,IAAI,CAACU,SAAD,CAAJ,CAAgBE,IAAhB,IAAwBD;AAFV,SAArB;AAIAH,QAAAA,SAAS,CAACS,IAAV,CAAeH,YAAf;AACH;;AACDH,MAAAA,aAAa,GAAGX,IAAI,CAACU,SAAD,CAAJ,CAAgBE,IAAhB,CAAhB;AACH;;AACD,WAAOJ,SAAP;AACH,GAfD;;AAiBI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,IAAD;AACA,IAAA,OAAO,EAAEZ,OADT;AAEA,IAAA,IAAI,EAAE;AACFsB,MAAAA,QAAQ,EAAE,CAAC;AACPlB,QAAAA,IAAI,EAAEA;AADC,OAAD;AADR,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAaH;;AAED,eAAeD,SAAf","sourcesContent":["import React from 'react'\nimport { useState , useEffect} from 'react';\nimport { Line } from \"react-chartjs-2\";\n\nconst options ={\n     legend: {\n         display\n     }\n}\n\nfunction LineGraph() {\nconst[data, setData] = useState({});\n// https://disease.sh/v3/covid-19/historical/all?lastdays=120\n\nuseEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n    .then(response => response.json())\n    .then(data => {\n            console.log(data)\n            const chartData = buildChartData(data);\n            setData(chartData)\n\n    })\n}, [])\n\nconst buildChartData = (data, casesType='cases') => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for(let date in data.cases) {\n        if(lastDataPoint) {\n            const newDataPoint = {\n                x: date,\n                y: data[casesType][date] - lastDataPoint\n            }\n            chartData.push(newDataPoint);\n        }\n        lastDataPoint = data[casesType][date];\n    }\n    return chartData;\n}\n\n    return (\n        <div>\n            <h1>I am a Graph</h1>\n            <Line \n            options={options}\n            data={{\n                datasets: [{\n                    data: data\n                }]\n\n            }} />\n        </div>\n    )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}