{"ast":null,"code":"var _jsxFileName = \"/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/src/LineGraph.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  }\n};\n\nfunction LineGraph() {\n  const [data, setData] = useState({}); // https://disease.sh/v3/covid-19/historical/all?lastdays=120\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(response => response.json()).then(data => {\n        console.log(data);\n        const chartData = buildChartData(data);\n        setData(chartData);\n      });\n    };\n\n    fetchData();\n  }, []);\n\n  const buildChartData = (data, casesType = 'cases') => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"I am a Graph\"), (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/React.createElement(Line, {\n    options: options,\n    data: {\n      datasets: [{\n        backgroundColor: \"rgba(204,16,52,0.5)\",\n        data: data\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default LineGraph;","map":{"version":3,"sources":["/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/src/LineGraph.js"],"names":["React","useState","useEffect","Line","options","legend","display","elements","point","radius","LineGraph","data","setData","fetchData","fetch","then","response","json","console","log","chartData","buildChartData","casesType","lastDataPoint","date","cases","newDataPoint","x","y","push","length","datasets","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAoBC,SAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,MAAMC,OAAO,GAAE;AACVC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADE;AAIVC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE;AADL;AADF;AAJC,CAAf;;AAWA,SAASC,SAAT,GAAqB;AACrB,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAA/B,CADqB,CAErB;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,SAAS,GAAG,YAAY;AAC1B,YAAMC,KAAK,CAAC,4DAAD,CAAL,CACLC,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAEAJ,IAAI,IAAI;AACNO,QAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACA,cAAMS,SAAS,GAAGC,cAAc,CAACV,IAAD,CAAhC;AACAC,QAAAA,OAAO,CAACQ,SAAD,CAAP;AACP,OANK,CAAN;AAOH,KARD;;AASAP,IAAAA,SAAS;AACZ,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMQ,cAAc,GAAG,CAACV,IAAD,EAAOW,SAAS,GAAC,OAAjB,KAA6B;AAChD,UAAMF,SAAS,GAAG,EAAlB;AACA,QAAIG,aAAJ;;AAEA,SAAI,IAAIC,IAAR,IAAgBb,IAAI,CAACc,KAArB,EAA4B;AACxB,UAAGF,aAAH,EAAkB;AACd,cAAMG,YAAY,GAAG;AACjBC,UAAAA,CAAC,EAAEH,IADc;AAEjBI,UAAAA,CAAC,EAAEjB,IAAI,CAACW,SAAD,CAAJ,CAAgBE,IAAhB,IAAwBD;AAFV,SAArB;AAIAH,QAAAA,SAAS,CAACS,IAAV,CAAeH,YAAf;AACH;;AACDH,MAAAA,aAAa,GAAGZ,IAAI,CAACW,SAAD,CAAJ,CAAgBE,IAAhB,CAAhB;AACH;;AACD,WAAOJ,SAAP;AACH,GAfD;;AAiBI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEK,CAAAT,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEmB,MAAN,IAAe,CAAf,iBACD,oBAAC,IAAD;AACA,IAAA,OAAO,EAAE1B,OADT;AAEA,IAAA,IAAI,EAAE;AACF2B,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,eAAe,EAAE,qBADV;AAGPrB,QAAAA,IAAI,EAAEA;AAHC,OAAD;AADR,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAmBH;;AAED,eAAeD,SAAf","sourcesContent":["import React from 'react'\nimport { useState , useEffect} from 'react';\nimport { Line } from \"react-chartjs-2\";\n\nconst options ={\n     legend: {\n         display: false,\n     },\n     elements:{\n         point: {\n             radius: 0,\n         },\n     },\n}\n\nfunction LineGraph() {\nconst[data, setData] = useState({});\n// https://disease.sh/v3/covid-19/historical/all?lastdays=120\n\nuseEffect(() => {\n    const fetchData = async () => {\n        await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n        .then(response => response.json())\n        .then(data => {\n                console.log(data)\n                const chartData = buildChartData(data);\n                setData(chartData)\n        })\n    }\n    fetchData();\n}, [])\n\nconst buildChartData = (data, casesType='cases') => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for(let date in data.cases) {\n        if(lastDataPoint) {\n            const newDataPoint = {\n                x: date,\n                y: data[casesType][date] - lastDataPoint\n            }\n            chartData.push(newDataPoint);\n        }\n        lastDataPoint = data[casesType][date];\n    }\n    return chartData;\n}\n\n    return (\n        <div>\n            <h1>I am a Graph</h1>\n            {data?.length > 0 && (\n            <Line \n            options={options}\n            data={{\n                datasets: [{\n                    backgroundColor: \"rgba(204,16,52,0.5)\",\n                    \n                    data: data\n                }]\n\n            }} />\n\n            )}\n\n        </div>\n    )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}