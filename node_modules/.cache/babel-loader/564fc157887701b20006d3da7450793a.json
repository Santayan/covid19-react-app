{"ast":null,"code":"import _regeneratorRuntime from\"/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{useState,useEffect}from'react';import{Line}from\"react-chartjs-2\";import numeral from\"numeral\";var options={legend:{display:false},elements:{point:{radius:0}},maintainAspectRatio:false,tooltips:{mode:\"index\",intersect:false,callbacks:{label:function label(tooltipItem,data){return numeral(tooltipItem.value).format(\"+0,0\");}}},scales:{xAxes:[{type:\"time\",time:{format:\"MM/DD/YY\",tooltipFormat:\"ll\"}}],yAxes:[{gridLines:{display:false},ticks:{callback:function callback(value,index,values){return numeral(value).format(\"0a\");}}}]}};var LineGraph=function LineGraph(_ref){var _ref$casesType=_ref.casesType,casesType=_ref$casesType===void 0?\"cases\":_ref$casesType,props=_objectWithoutProperties(_ref,[\"casesType\"]);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var buildChartData=function buildChartData(data){var chartData=[];var lastDataPoint;console.log(\"Data in line graph -->>\",data);for(var date in data.cases){if(lastDataPoint){var newDataPoint={x:date,y:data[casesType][date]-lastDataPoint};chartData.push(newDataPoint);}lastDataPoint=data[casesType][date];}return chartData;};// https://disease.sh/v3/covid-19/historical/all?lastdays=120\nuseEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(function(response){return response.json();}).then(function(data){console.log(data);var chartData=buildChartData(data);setData(chartData);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[casesType]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null),(data===null||data===void 0?void 0:data.length)>0&&/*#__PURE__*/React.createElement(Line,{options:options,data:{datasets:[{backgroundColor:\"rgba(204,16,52,0.5)\",borderColor:'#CC1034',data:data}]}}));};export default LineGraph;","map":{"version":3,"sources":["/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/src/LineGraph.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","casesType","props","setData","buildChartData","chartData","lastDataPoint","console","log","date","cases","newDataPoint","x","y","push","fetchData","fetch","then","response","json","length","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState , useEffect} from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nconst options = {\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return numeral(tooltipItem.value).format(\"+0,0\");\n        },\n      },\n    },\n  \n    scales: {\n      xAxes: [\n        {\n          type: \"time\",\n          time: {\n            format: \"MM/DD/YY\",\n            tooltipFormat: \"ll\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n          ticks: {\n            callback: function (value, index, values) {\n              return numeral(value).format(\"0a\");\n            },\n          },\n        },\n      ],\n    },\n  };\n\n  const LineGraph = ({ casesType = \"cases\", ...props }) => {\n    const [data, setData] = useState({});\n    const buildChartData = (data) => {\n      const chartData = [];\n      let lastDataPoint;\n      console.log(\"Data in line graph -->>\", data);\n      for (let date in data.cases) {\n        if (lastDataPoint) {\n          const newDataPoint = {\n            x: date,\n            y: data[casesType][date] - lastDataPoint,\n          };\n          chartData.push(newDataPoint);\n        }\n        lastDataPoint = data[casesType][date];\n      }\n      return chartData;\n    };\n// https://disease.sh/v3/covid-19/historical/all?lastdays=120\n\nuseEffect(() => {\n    const fetchData = async () => {\n        await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n        .then(response => response.json())\n        .then(data => {\n                console.log(data)\n                const chartData = buildChartData(data);\n                setData(chartData)\n        })\n    }\n    fetchData();\n}, [casesType])\n\n\n    return (\n        <div>\n            <h1></h1>\n            {data?.length > 0 && (\n            <Line \n            options={options}\n            data={{\n                datasets: [{\n                    backgroundColor: \"rgba(204,16,52,0.5)\",\n                    borderColor: '#CC1034',\n                    data: data\n                }]\n\n            }} />\n\n            )}\n\n        </div>\n    )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}