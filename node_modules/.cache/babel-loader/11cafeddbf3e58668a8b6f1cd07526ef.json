{"ast":null,"code":"var _jsxFileName = \"/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent, Table } from \"@material-ui/core\";\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport TableA from './TableA';\nimport './App.css';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [dropdownCountry, setdropdownCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState({});\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []); // STATE = thats how we write variables in react\n  // USEEFFECT = Runs a piece of code based on a given condition\n  // https://disease.sh/v3/covid-19/countries\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setTableData(data);\n        console.log(data);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    setdropdownCountry(countryCode);\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setdropdownCountry(countryCode);\n      setCountryInfo(data);\n    });\n  };\n\n  console.log(countryInfo);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, \"COVID-19 TRACKER\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"app_dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    onChange: onCountryChange,\n    value: dropdownCountry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"worldwide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Worldwide\"), countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Coronavirus Cases\",\n    cases: countryInfo.todayCases,\n    total: countryInfo.cases,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Recovered\",\n    cases: countryInfo.todayRecovered,\n    total: countryInfo.recovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Death\",\n    cases: countryInfo.todayDeaths,\n    total: countryInfo.deaths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"app_right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"Live Cases By Country\"), /*#__PURE__*/React.createElement(TableA, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }), \"console.log(tableData);\", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Worldwide New Cases\")))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/santayanpaul/Desktop/Santayan Personal/PROJECT/covid19-react-app/covid19-react-app/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","Table","InfoBox","Map","TableA","App","countries","setCountries","dropdownCountry","setdropdownCountry","countryInfo","setCountryInfo","tableData","setTableData","fetch","then","response","json","data","getCountriesData","map","country","name","value","iso2","console","log","onCountryChange","event","countryCode","target","url","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React , {useState , useEffect}  from 'react';\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n  Table\n} from \"@material-ui/core\" \nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport TableA from './TableA';\nimport './App.css';\n\nfunction App() {\n  const [countries,setCountries] = useState([]);\n  const [dropdownCountry,setdropdownCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState({});\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then(response => response.json())\n    .then(data => {\n      setCountryInfo(data);\n    })\n  }, [])\n\n  // STATE = thats how we write variables in react\n  // USEEFFECT = Runs a piece of code based on a given condition\n  // https://disease.sh/v3/covid-19/countries\n\n  useEffect(() => {\n\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data) => {\n        const countries = data.map((country) => (\n          {\n            name: country.country,\n            value: country.countryInfo.iso2\n          }\n        ));\n        setTableData(data);\n        console.log(data);\n        setCountries(countries);\n      })\n    }\n      getCountriesData();\n  }, [])\n\n  const onCountryChange = async (event) => {\n      const countryCode = event.target.value;\n      setdropdownCountry(countryCode);\n\n      const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : \n      `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n      await fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        setdropdownCountry(countryCode);\n        setCountryInfo(data);\n      })\n  }\n  console.log(countryInfo)\n\n  return (\n    <div className=\"app\"> \n\n      <div className=\"app_left\">\n              {/* Header */}\n              {/* Title + Select Input Dropdown */}\n              <div className=\"app_header\">\n    <h1>COVID-19 TRACKER</h1>\n    <FormControl className=\"app_dropdown\">\n      <Select variant=\"outlined\" onChange={onCountryChange} value={dropdownCountry}>\n      <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n        {\n          countries.map((country)=> (\n            <MenuItem value={country.value}>{country.name}</MenuItem>\n          ))\n        }\n\n          {/* <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n          <MenuItem value=\"worldwide\">India</MenuItem>\n          <MenuItem value=\"worldwide\">USA</MenuItem>\n          <MenuItem value=\"worldwide\">Australia</MenuItem> */}\n        </Select>\n    </FormControl>\n    </div>\n     \n                {/* InfoBoxs */}\n                 {/* InfoBoxs */}\n                {/* InfoBoxs */}\n                 {/* InfoBoxs */}\n    <div className=\"app_stats\">\n          <InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases}></InfoBox>\n\n          <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered}></InfoBox>\n\n          <InfoBox title=\"Death\" cases={countryInfo.todayDeaths} total={countryInfo.deaths}></InfoBox>\n    </div>\n    {/* Map */}\n    <Map></Map>\n      </div>\n          <div>\n            <Card className=\"app_right\">\n              <CardContent>\n                <h3>Live Cases By Country</h3>\n                \n                <TableA countries = { tableData } />\n                console.log(tableData);\n                <h3>Worldwide New Cases</h3>\n                {/* Graph */}   \n\n              </CardContent>\n            </Card>\n\n          </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}